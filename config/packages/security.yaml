security:
    enable_authenticator_manager: true
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    providers:
        app_user_provider:
            entity:
                class: App\Entity\Customer
                property: email
    firewalls:
        login:
            pattern: ^/api/login
            stateless: true
            provider: app_user_provider
            json_login:
                username_path: email
                password_path: password
                check_path: /api/login_check
                # success_handler: lexik_jwt_authentication.handler.authentication_success
                success_handler: App\Security\CustomAuthenticationSuccessHandler
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
        api:
            pattern: ^/api
            stateless: true
            jwt: ~
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider

    access_control:
        - { path: ^/api/register, roles: PUBLIC_ACCESS  }
        - { path: ^/api/login, roles: PUBLIC_ACCESS  }
        - { path: ^/admin_back_office/protected, roles: Super Admin }
        # - { path: ^/api, roles: ROLE_CUSTOMER }

    # Configuration spécifique aux tests
when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4      # Coût le plus bas possible pour bcrypt
                time_cost: 3 # Coût le plus bas possible pour argon
                memory_cost: 10 # Coût le plus bas possible pour argon
